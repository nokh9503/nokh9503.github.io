[ { "title": "[백준 5585번] 거스름돈", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-5585-%EA%B1%B0%EC%8A%A4%EB%A6%84%EB%8F%88/", "categories": "Algorithm, Greedy", "tags": "Algorithm, Greedy, Python, Baekjoon", "date": "2021-03-13 23:13:00 +0900", "snippet": "거스름돈풀이받을 잔돈을 가장 적게 주는 방법으로 가장 기초적인 탐욕 알고리즘 문제이다. 풀이는 다음과 같다.화폐 단위가 주어졌을 때 가장 큰 값 부터 작은 값으로 나열해준다. 반복문을 통해서 한번 거슬러 줄 수 있는 만큼 숫자를 세고 남은 거스름돈을 구하여 더이상 구할 수 없을 때까지 구해주면 된다.코드money = [500, 100, 50, 10, 5, 1] # 화폐 단위N = 1000 - int(input()) # 지불한 돈 입력하여 거스름 돈 생성cnt = 0for i in money: cnt += N /..." }, { "title": "[백준 2920] 음계", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-2920-%EC%9D%8C%EA%B3%84/", "categories": "Algorithm, Implement", "tags": "Algorithm, Implement, Python, Baekjoon", "date": "2021-03-11 23:42:00 +0900", "snippet": "음계풀이간단한 배열을 이용한 문제로 파이썬에서의 배열의 개념과 구현만 알고 있으면 풀 수 있는 문제이다.코드s = list(map(int, input().split(&#39; &#39;))) # 음계 입력ascending = Truedescending = Truefor i in range(1, 8): # 오름차순이면 descending은 False if s[i] &amp;gt; s[i-1]: descending = False # 내림차순이면 ascending은 False elif s[i] ..." }, { "title": "[자료구조]큐(Queue)", "url": "/nokh9503.github.io/posts/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0-%ED%81%90(Queue)/", "categories": "Data Structure, Queue", "tags": "Data Structure, Queue, Python", "date": "2021-03-11 22:26:00 +0900", "snippet": "대표적인 데이터 구조: 큐(Queue)1. 큐 구조 줄을 서는 행위와 유사 가장 먼저 넣은 데이터를 가장 먼저 꺼낼 수 있는 구조 음식점에서 가장 먼저 줄을 선 사람이 제일 먼저 음식점에 입장하는 것과 동일 FIFO(First-In, First-Out) 또는 LILO(Last-In, Last-Out) 방식으로 스택과 꺼내는 순서가 반대 2. 알아둘 용어 Enqueue: 큐에 데이터를 넣는 기능 Dequeue: 큐에서 데이터를 꺼내는 기능3. 파이썬 queue 라이브러리 활용해서 큐 자료..." }, { "title": "[자료구조]배열(Array)", "url": "/nokh9503.github.io/posts/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0-%EB%B0%B0%EC%97%B4(Array)/", "categories": "Data Structure, Array", "tags": "Data Structure, Array, Python", "date": "2021-03-11 06:00:00 +0900", "snippet": "배열(Array)이란? 데이터를 나열하고, 각 데이터를 인덱스에 대응하도록 구성한 데이터 구조 파이썬에서는 리스트 타입이 배열 기능을 제공하고 있음1. 배열이 왜 필요할까? 같은 종류의 데이터를 효율적으로 관리하기 위해 사용 같은 종류의 데이터를 순차적으로 저장 배열의 장점: 빠른 접근 가능 배열의 단점: 추가/삭제가 쉽지 않음, 미리 최대 길이를 지정해야 함2. 파이썬과 C언어의 배열 예제C언어 예제#include &amp;lt;stdio.h&amp;gt;int main(int argc, char* argv[]){..." }, { "title": "[알고리즘]탐욕 알고리즘(Greedy)의 이해", "url": "/nokh9503.github.io/posts/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%ED%83%90%EC%9A%95-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98(Greedy)%EC%9D%98-%EC%9D%B4%ED%95%B4/", "categories": "Algorithm, Greedy", "tags": "Algorithm, Array, Python", "date": "2021-03-11 00:30:00 +0900", "snippet": "1. 탐욕 알고리즘 이란? Greedy algorithm 또는 탐욕 알고리즘 이라고 불림 최적의 해에 가까운 값을 구하기 위해 사용됨 여러 경우 중 하나를 결정해야할 때마다, 매순간 최적이라고 생각되는 경우를 선택하는 방식으로 진행해서, 최종적인 값을 구하는 방식2. 탐욕 알고리즘 예문제 1: 동전 문제 지불해야 하는 값이 4720원 일 때 1원 50원 100원, 500원 동전으로 동전의 수가 가장 적게 지불하시오. 가장 큰 동전부터 최대한 지불해야 하는 값을 채우는 방식으로 구현 가능 탐욕 알..." }, { "title": "[프로그래머스] 두 개 뽑아서 더하기", "url": "/nokh9503.github.io/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EB%91%90-%EA%B0%9C-%EB%BD%91%EC%95%84%EC%84%9C-%EB%8D%94%ED%95%98%EA%B8%B0/", "categories": "Algorithm, Mathematics", "tags": "Algorithm, Mathematics, Python, Programmers", "date": "2021-01-21 04:00:00 +0900", "snippet": "두 개 뽑아서 더하기풀이배열이 주어질 때 두 개의 인덱스끼리 더하여 만들 수 있는 모든 수를 구하는 조합 문제이다. 파이썬의 경우에는 이런 문제들은 itertools 라이브러리의 combinations를 사용하면 된다. 그리고 중복된 값을 제거할 때는 set 함수를 사용하여 문제를 풀면 된다.코드from itertools import combinationsdef solution(numbers): answer = [] # 결과 리스트 temp = combinations(numbers..." }, { "title": "[백준 1715번] 카드 정렬하기", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-1715-%EC%B9%B4%EB%93%9C-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/", "categories": "Algorithm, Greedy", "tags": "Algorithm, Greedy, Python, Baekjoon", "date": "2021-01-18 04:00:00 +0900", "snippet": "카드 정렬하기풀이처음에 리스트를 정렬하고 가장 작은 수와 그 다음 작은 수를 뽑아서 더해주는 식으로 풀었더니 시간문제로 틀렸다. 알고리즘 분류를 보니깐 우선순위 큐으로도 분류가 되어있어서 heap 자료구조를 이용해서 풀었더니 맞았다. heap은 특정한 규칙을 가지는 트리로, 최댓값과 최솟값을 찾는 연산을 빠르게 하기 위해 고안된 완전이진트리를 기본으로 한다.heap 자료구조는 다음과 같다.heap은 A가 B의 부모노드이면 A의 키값과 B의 키값 사이에는 대소 관계가 성립한다. Min Heap: 부모 노드의 키값이 자식 노드의..." }, { "title": "[백준 10953번] A+B - 6", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-10953-A+B-6/", "categories": "Algorithm, String", "tags": "Algorithm, String, Python, Baekjoon", "date": "2021-01-14 08:00:00 +0900", "snippet": "A+B - 6풀이어떤 입력에 대해서 특정 입력을 기준으로 나눌 수 있는지 알아보는 문제이다. 파이썬에서는 map() 함수를 이용하면 된다.코드T = int(input()) # 테스트 케이스 개수for _ in range(T): # A와 B를 콤마(,)로 구분 A, B = map(int, input().split(&#39;,&#39;)) result = A+B print (result)결과" }, { "title": "[백준 2133번] 타일 채우기", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-2133-%ED%83%80%EC%9D%BC-%EC%B1%84%EC%9A%B0%EA%B8%B0/", "categories": "Algorithm, DP", "tags": "Algorithm, DP, Python, Baekjoon", "date": "2021-01-14 05:00:00 +0900", "snippet": "타일 채우기풀이3xN 크기의 벽을 2x1, 1x2 크기의 타일로 채웠을 때 나올 수 있는 경우의 수를 구하는 정형적인 동적계획법 문제이다. 문제를 이해하는데 오래걸리진 않았지만 처음에 경우의 수를 구하는데 시간이 좀 걸렸다.문제의 풀이를 보면 다음과 같다.처음 n=1일 때 2x1, 1x2 크기의 타일로 3x1의 벽을 채울 수 없기 때문에 0이다.다음 n=2일 때는 경우의 수가 3개 나온다. 즉, dp[2] = 3이다. n이 3일 때도 n=1과 마찬가지로 주어진 타일로 만들 수 없기 때문에 0이다. 보면 알 수 있겠지만 n이 홀..." }, { "title": "[백준 4796번] 캠핑", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-4796-%EC%BA%A0%ED%95%91/", "categories": "Algorithm, Greedy", "tags": "Algorithm, Greedy, Python, Baekjoon", "date": "2021-01-07 07:00:00 +0900", "snippet": "캠핑풀이처음에 문제를 읽고 무슨 소리인지 이해가 잘 되지 않았지만 다른 사람들의 풀이 방식을 보고 단번에 이해가 갔다. 우선, 첫 번째 케이스의 풀이를 보면 이해가 될 것이다.첫 번째 케이스의 L, P, V는 5, 8, 20으로 되어 있다. 즉, 연속하는 8일 중 5일만 사용할 수 있고 28일짜리 휴가가 시작된다. 문제와 풀이를 정리하자면 다음과 같다. 연속하는 8일 중 5일만 사용할 수 있다 20일짜리 휴가 시작 휴가의 20일 중 (V//P)*L 만큼 사용할 수 있다.(캠피장을 이용할 수 있는 날이 한정되어 있기 때문)..." }, { "title": "[백준 11652번] 카드", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-11652-%EC%B9%B4%EB%93%9C/", "categories": "Algorithm, Sorting", "tags": "Algorithm, Sorting, Python, Baekjoon", "date": "2021-01-02 18:00:00 +0900", "snippet": "카드풀이N장의 카드가 있을 때, 가장 많이 가지고 있는 정수를 구하는 정렬 문제이다. 단, 가장 많이 가지고 있는 정수가 여러 가지라면, 작은 것을 출력한다.이 문제는 파이썬 딕셔너리를 이용해서 풀면 된다. 딕셔너리는 immutable한 키(key)와 mutable한 값(value)으로 맵핑되어 있는 순서가 없는 집합이다.딕셔너리를 사용하는 방법은 다음과 같다.{&quot;a&quot; : 1, &quot;b&quot; : 2}# {&#39;a&#39; : 1, &#39;b&#39; : 2}# a, b = key(키)# 1, ..." }, { "title": "[백준 1373번] 2진수 8진수", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-1373-2%EC%A7%84%EC%88%98-8%EC%A7%84%EC%88%98/", "categories": "Algorithm, String", "tags": "Algorithm, String, Python, Baekjoon", "date": "2021-01-01 21:00:00 +0900", "snippet": "2진수 8진수풀이2진수를 8진수로 만드는 문자열 문제이다. 이 문제는 파이썬이 가지고 있는 강력한 기능을 가장 잘 보여줄 수 있는 문제라고 생각한다.먼저 2진수를 8진수로 바꾸는 방법은 간단한다. 2진수가 주어졌을 때 3자리씩 끊어준다. 그러면 11001100 이라는 2진수가 주어졌을 때 11 / 001 / 100으로 끊을 수 있다. 그 다음, 8진수로 변환해주고 앞자리 부터 차례대로 써주면 3 / 1 / 4로 변환된 자리의 숫자들이 314가 된다.파이썬으로 oct()함수와 문자열 슬라이싱을 사용하면 한 줄이면 된다.코드pri..." }, { "title": "CNN의 구조와 예제", "url": "/nokh9503.github.io/posts/CNN%EC%9D%98-%EA%B5%AC%EC%A1%B0%EC%99%80-%EC%98%88%EC%A0%9C/", "categories": "AI, Deep Learning", "tags": "AI, Deep Learning, CNN", "date": "2020-12-28 01:00:00 +0900", "snippet": "컨볼루션 신경망(CNN)을 알아가기 전에영상 인식(Image Recognition)은 영상 안의 물체를 인식하거나 분류하는 것이다. 컴퓨터가 자동으로 영상 안의 사물을 인식할 수 있다면 얼마나 편리한 세상이 올까?아직까지는 컴퓨터는 인간의 수준만큼 영상을 인식하고 판별하지 못한다. 하지만 최근에 많은 연구들이 활발하게 진행되고 있고 많은 사례들을 통해 성능을 인증하고 있기 때문에 가까운 미래에 컴퓨터가 인간처럼 영상을 자유자재로 인식할 수 있는 날이 올 것이라 생각한다.1. 컨볼루션 신경망(CNN)컨볼루션(convolution..." }, { "title": "[백준 1339번] 단어 수학", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-1339-%EB%8B%A8%EC%96%B4-%EC%88%98%ED%95%99/", "categories": "Algorithm, Greedy", "tags": "Algorithm, Greedy, Python, Baekjoon", "date": "2020-12-27 07:00:00 +0900", "snippet": "단어 수학풀이단어의 N개가 주어졌을 때, 주어진 단어의 합의 최댓값을 구하는 그리디 문제이다.알파벳 대문자를 0부터 9까지의 숫자 중 하나로 바꾸는 문제이기 때문에 전부다 생각할 필요는 없다. 문제의 조건을 보면 다음과 같다. 같은 알파벳은 같은 숫자로 바꿔야 한다. 두 개 이상의 알파벳이 같은 숫자로 바뀌어지면 안 된다.풀이의 예를 보면 단어 ABC가 주어졌다고 하자. 단어를 숫자로 바꾸었을 때 그 값은 (A x 100) + (B x 10) + (C x 1) 이 된다.그러면 단어 ABC의 alpha[]로 나타냈을 때는al..." }, { "title": "(백준 2579번) 계단 오르기", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-2579-%EA%B3%84%EB%8B%A8-%EC%98%A4%EB%A5%B4%EA%B8%B0/", "categories": "Algorithm, DP", "tags": "Algorithm, DP, Python, Baekjoon", "date": "2020-12-26 00:00:00 +0900", "snippet": "계단 오르기풀이각 계단의 점수가 주어지고 단계로 올라갈 때, 마지막 도착 단계에서 총 점수의 최댓값을 구하는 동적계획법 문제이다.문제의 규칙을 보면 다음과 같다. 계단을 한 번에 한 번 또는 두 번씩 오를 수 있다. 연속된 세 개의 계단은 오르지 못한다. 마지막 도착 계단은 밟아야 한다.즉, 마지막 값은 무조건 추가를 하지만 마지막 계단 전을 밟은 경우와 밟지 않은 경우를 생각하면 dp를 구할 수 있다. dp의 첫 번째는 맨 처음 계단 점수가 들어간다. dp[1]은 첫 번째, 두 번째 계단 점수의 합을 구한다. dp..." }, { "title": "[백준 2576번] 홀수", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-2576-%ED%99%80%EC%88%98/", "categories": "Algorithm, Mathematics", "tags": "Algorithm, Mathematics, Python, Baekjoon", "date": "2020-12-25 22:00:00 +0900", "snippet": "홀수풀이7개의 자연수가 주어질 때, 홀수인 자연수를 찾아 그 합을 구하고 찾은 홀수들 중 최솟값을 찾는 문제이다. 홀수인 수를 구한다. (자연수를 2로 나누었을 때 나머지가 0이 아니면 홀수) 홀수들의 합을 구하고 최솟값을 구한다. 만약 홀수가 없을 때는 -1을 출력한다.코드temp = [] # 홀수를 담을 배열result = 0 # 배열의 합for i in range(7): n = int(input()) # 자연수 n을 2로 나누었을 때 나머지가 0이 아니면 홀수 if ..." }, { "title": "[백준 1026번] 보물", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-1026-%EB%B3%B4%EB%AC%BC/", "categories": "Algorithm, Sorting", "tags": "Algorithm, Sorting, Python, Baekjoon", "date": "2020-12-24 22:00:00 +0900", "snippet": "보물풀이배열 A, B가 주어질 때 A[0] x B[0] x … x A[N-1] x B[N-1] 처럼 구하여 최솟값을 구하는 정렬 문제이다. 문제에 B는 재배열하지 않고 A만 재배열하여 최솟값을 구하라고 적혀 있고 힌트에서도 A = {1, 1, 0, 6, 1} 처럼 구하면 된다고 했지만 정작 그렇게 풀면 안되는 것 같다.굳이 힌트와 같이 구하지 않아도 된다. 조그만 생각해보면 두 개의 배열이 주어지고 두 배열을 곱하여 최솟값을 구하는 방법은 가장 작은 수와 큰 수를 곱하면 된다. 즉, A는 오름차순, B는 내림차순으로 계산하면 ..." }, { "title": "[백준 14501번] 퇴사", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-14501-%ED%87%B4%EC%82%AC/", "categories": "Algorithm, DP", "tags": "Algorithm, DP, Python, Baekjoon", "date": "2020-12-24 21:00:00 +0900", "snippet": "퇴사풀이N+1 날에 퇴사하기 위해 N일 동안 최대한 얻을 수 있는 수익을 구하는 동적계획법 문제이다. 이 문제는 앞에서 부터 하나하나 계산하는 방식이 아닌 뒤에서 부터 계산해서 풀어야 한다.문제에 명시되어 있는 조건을 보면 상담을 하는 동안 다른 상담은 못한다. N+1은 퇴사하기 때문에 표에 있는 것처럼 6, 7일은 상담을 못한다.이라는 것을 확인할 수 있다.다음 문제 해결방법을 보면 풀 수 있다. N을 넘어가면 안되므로 dp[i+1]에 최댓값을 넣는다. N을 넘어가지 않는다면 dp[i+1]과 Pi + dp[i+T[i]..." }, { "title": "[백준 2530번] 인공지능 시계", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-2530-%EC%9D%B8%EA%B3%B5%EC%A7%80%EB%8A%A5-%EC%8B%9C%EA%B3%84/", "categories": "Algorithm, Mathematics", "tags": "Algorithm, Mathematics, Python, Baekjoon", "date": "2020-12-24 20:20:00 +0900", "snippet": "인공지능 시계풀이시, 분, 초 단위의 계산을 할 줄 알면 아주 쉽게 풀리는 문제이다.위의 풀이와 같이 초, 분, 시 단위 순으로 계산을 하고 60초, 60분, 24시간을 넘어갈 때 그에 맞는 조건을 계산해주면 된다.코드A, B, C = map(int, input().split()) # A : 시, B : 분, C : 초D = int(input()) # D : 요리하는 데 필요한 시간# 초 단위 계산C += D % 60D = D // 60if C &amp;gt;= 60: B += 1 ..." }, { "title": "[백준 2309번] 일곱 난쟁이", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-2309-%EC%9D%BC%EA%B3%B1-%EB%82%9C%EC%9F%81%EC%9D%B4/", "categories": "Algorithm, Brute-Force", "tags": "Algorithm, Brute-Force, Python, Baekjoon", "date": "2020-12-20 21:17:00 +0900", "snippet": "일곱 난쟁이풀이7명의 난쟁이들의 키의 합은 100이라고 한다. 9명의 난쟁이들 중 2명을 빼서 합이 100이 되게 하면 된다. 난쟁이들들의 키를 입력한다. 오름차순으로 정렬한다.(마지막에 해도 된다) 9명의 난쟁이 중 2명을 뽑아 뺀 값이 100인지 찾는다. 해당 난쟁이를 없애고 출력한다.코드temp = [] # 난쟁이들의 키answer = False# 난쟁이들의 키를 입력for _ in range(9): temp.append(int(input()))result = sum(temp) # 9명의 ..." }, { "title": "[백준 8985번] OX퀴즈", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-8985-OX%ED%80%B4%EC%A6%88/", "categories": "Algorithm, String", "tags": "Algorithm, String, Python, Baekjoon", "date": "2020-12-18 15:25:00 +0900", "snippet": "OX퀴즈풀이 “O”, “X”를 입력한다. result(결과값)과 cnt(연속된 점수) 변수를 만들어 연속된 “O”의 개수를 고려하여 점수를 계산한다. “x”가 나올 시 cnt 값을 0으로 초기화하여 문제 조건에 만족하게 만든다.코드T = int(input()) # 테스트 케이스for i in range(T): n = input() # &#39;O&#39;, &#39;X&#39; 입력 result = 0 # 결과값 cnt = 0 # 연속된 점수 for j in..." }, { "title": "[백준 10798번] 세로읽기", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-10798-%EC%84%B8%EB%A1%9C%EC%9D%BD%EA%B8%B0/", "categories": "Algorithm, String", "tags": "Algorithm, String, Python, Baekjoon", "date": "2020-12-18 14:53:00 +0900", "snippet": "세로읽기풀이주어진 자리에 있는 글자를 세로로 읽는데 해당 자리의 글자가 없으며, 읽지 않고 그 다음 글자를 계속 읽는 문자열 문제이다. 문제 설명이 뭔가 많은데 결국 2차원 배열를 알고 있으면 간단하게 풀 수 있는 문제이다. 한 줄 마다 글자를 입력한다. 배열을 세로로 읽는다. 단, 다음 자리의 글자가 없는 경우 다음 글자를 읽는다.코드arr = [[0] * 15 for _ in range(5)] # 문자열 생성# 한 줄 마다 글자 입력for i in range(5): c = list(input()) for..." }, { "title": "[백준 2798번] 블랙잭", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-2798-%EB%B8%94%EB%9E%99%EC%9E%AD/", "categories": "Algorithm, Brute-Force", "tags": "Algorithm, Brute-Force, Python, Baekjoon", "date": "2020-12-17 00:24:00 +0900", "snippet": "블랙잭풀이N장의 카드에 써져 있는 숫자가 주어졌을 때, M을 넘지 않으면서 M에 최대한 가까운 3장의 합을 구하는 브루트포스 문제이다. 파이썬으로 구현했을 때 Combinations 함수를 사용하면 쉽다.Combinations는 리스트에 있는 값들의 모든 조합을 구하는 함수로 파이썬의 기본 라이브러리인 itertools를 사용하면 된다.예로 1부터 5까지를 3가지의 수로 모든 조합을 나타낸다고 하면items = [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;]..." }, { "title": "[백준 1065번] 한수", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-1065-%ED%95%9C%EC%88%98/", "categories": "Algorithm, Brute-Force", "tags": "Algorithm, Brute-Force, Python, Baekjoon", "date": "2020-12-17 00:13:00 +0900", "snippet": "한수풀이어떤 양의 정수 X의 각 자리가 등차수열이면 그 수를 한수라고 한다. 어떤 자연수 N이 주어졌을 때, 1보다 크거나 같고, N보다 작거나 같은한수의 개수를 출력하는 문제이다.이 문제는 푸는 데는 어렵지는 않지만 문제를 이해하는 데 조금 시간이 걸렸다. 다음 풀이를 보면 이해가 될 것이다.자연수 123이 주어졌을 때 각 자리를 나누어서 보면 ‘1’, ‘2’, ‘3’은 등차수열을 이룬다. 세 자릿수 숫자는 등차수열을 이룰 수도 있고 아닐 수도 있지만, 두 자릿수 숫자는 항상 등차수열을 이룬다. 따라서, 1 부터 99 까지..." }, { "title": "[백준 1463번] 1로 만들기", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-1463-1%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0/", "categories": "Algorithm, DP", "tags": "Algorithm, DP, Python, Baekjoon", "date": "2020-12-13 01:01:00 +0900", "snippet": "1로 만들기풀이정수 N이 주어졌을 때, 위의 사용할 수 있는 연산 3가지를 적절히 사용하여 1로 만드는 문제이다. 처음에 간단하게 구현을 통해서 시도해 봤지만 ‘10’이라는 반례가 있어서 틀렸었다. 뭐가 문제인지 깨닫고 동적계획법으로 풀었다. N//3을 연산으로 돌리면 -&amp;gt; +1을 하면 된다. N//2을 연산으로 돌리면 -&amp;gt; +1을 하면 된다. N-1을 연산으로 돌리면 -&amp;gt; +1을 하면 된다.따라서 점화식은 DP = min(DP(N//3) + 1, DP(N//2) + 1, DP(N-..." }, { "title": "[백준 2839번] 설탕 배달", "url": "/nokh9503.github.io/posts/%EB%B0%B1%EC%A4%80-2839-%EC%84%A4%ED%83%95-%EB%B0%B0%EB%8B%AC/", "categories": "Algorithm, DP", "tags": "Algorithm, DP, Python, Baekjoon", "date": "2020-12-13 01:00:00 +0900", "snippet": "설탕 배달풀이설탕을 최대한 적은 봉지에 나누는 동적계획법 문제이다. 최대한 적은 봉지로 나눌려면 5kg으로 나누어야 한다. 정확하게 나눌 수 없으면 -1를 호출한다.코드N = int(input()) # 배달해야 할 설탕 무게result = 0 # 결과 값while True: if N % 5 == 0: result = result + (N//5) print(result) break N = N - 3 result += 1 if..." }, { "title": "딥러닝 기반 반려견 울음소리 감지와 감정 및 상태 분석(3)", "url": "/nokh9503.github.io/posts/%EB%94%A5%EB%9F%AC%EB%8B%9D-%EB%B0%98%EB%A0%A4%EA%B2%AC-%EC%9A%B8%EC%9D%8C%EC%86%8C%EB%A6%AC-%EA%B0%90%EC%A7%80%EC%99%80-%EA%B0%90%EC%A0%95-%EB%B6%84%EC%84%9D(3)/", "categories": "AI, Deep Learning", "tags": "AI, Deep Learning", "date": "2020-12-13 01:00:00 +0900", "snippet": "4. 프로젝트 결과4.1 연구 결과  결론부터 말하자면 Overfitting과 Underfitting이 둘 다 확인할 수 있었다. 그림에서 왼쪽부터 CBAM을 마지막 Convolution Block에 적용한 모델 결과 값, 가운데는 모든 Convolution Block에 CBAM을 적용한 결과 값이다. 마지막으로 오른쪽은 CBAM을 적용하지 않은 모델의 결과 값이다.4.2 원인  연구 결과 4.1에 대한 결과에 대해서 다음과 같은 문제점이 있었다고 판단한다. 데이터의 부족이다. 앞선 3.2 프로젝트 내용에서 언급했듯이 주로 ..." }, { "title": "딥러닝 기반 반려견 울음소리 감지와 감정 및 상태 분석(2)", "url": "/nokh9503.github.io/posts/%EB%94%A5%EB%9F%AC%EB%8B%9D-%EB%B0%98%EB%A0%A4%EA%B2%AC-%EC%9A%B8%EC%9D%8C%EC%86%8C%EB%A6%AC-%EA%B0%90%EC%A7%80%EC%99%80-%EA%B0%90%EC%A0%95-%EB%B6%84%EC%84%9D(2)/", "categories": "AI, Deep Learning", "tags": "AI, Deep Learning", "date": "2020-12-13 01:00:00 +0900", "snippet": "3. 프로젝트 내용3.1 제안 방법  추출한 음원파일을 Mel-spectrogram으로 변환하고 frequency scale, time-step 등과 같은 이미지 변환에 대한 hyper parameter를 initialize하여 이미지 파일로 만든다.  이후 비지도 학습을 이용하여 입력 값에 대한 label이 주어지지 않은 데이터들을 군집화를 통해 분류하고 특징의 채널 간의 dependency를 분석하고 중요도가 높은 채널에 더 높은 가중치를 부여하는 attention을 적용하여 mel-spectrogram 이미지의 가장 두..." }, { "title": "딥러닝 기반 반려견 울음소리 감지와 감정 및 상태 분석(1)", "url": "/nokh9503.github.io/posts/%EB%94%A5%EB%9F%AC%EB%8B%9D-%EB%B0%98%EB%A0%A4%EA%B2%AC-%EC%9A%B8%EC%9D%8C%EC%86%8C%EB%A6%AC-%EA%B0%90%EC%A7%80%EC%99%80-%EA%B0%90%EC%A0%95-%EB%B6%84%EC%84%9D(1)/", "categories": "AI, Deep Learning", "tags": "AI, Deep Learning", "date": "2020-12-13 01:00:00 +0900", "snippet": "Analysis of Emotional Conditions through the Barking of Dogs Based on Deep Learning이 주제는 대학교 졸업 논문으로 쓴 주제이다. 교수님들과 같이 연구할 수 있는 다양한 주제들이 있었지만 나는 산업에서 다룰 수 있는 주제를 하기를 원해서 스타트업과 같이 진행을 했다. 비록, 초창기 스타트업이라 현업께서 굉장히 바쁘시고 다른 프로젝트도 있어서 많이 도와주시진 못했지만 내가 무엇인가를 기획하고 설계할 수 있었음에 굉장히 뜻 깊은 경험이라고 생각한다.요약  현재 반려동..." } ]
